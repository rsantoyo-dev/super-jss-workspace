{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Alignment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [sj]=\"[{ justifyContent: 'space-between', alignItems: 'center' }, sj.minH(6), sj.bg('light.dark'), sj.p(0.5) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Left</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Right</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display:flex; flex-direction:column; gap:8px\">\n        <sj-typography variant=\"h1\">Heading 1</sj-typography>\n        <sj-typography variant=\"h2\">Heading 2</sj-typography>\n        <sj-typography variant=\"h3\">Heading 3</sj-typography>\n        <sj-typography variant=\"h4\">Heading 4</sj-typography>\n        <sj-typography variant=\"h5\">Heading 5</sj-typography>\n        <sj-typography variant=\"h6\">Heading 6</sj-typography>\n        <sj-typography variant=\"p\">Paragraph text</sj-typography>\n        <sj-typography variant=\"span\">Span text</sj-typography>\n        <sj-typography variant=\"strong\">Strong text</sj-typography>\n        <sj-typography variant=\"small\">Small text</sj-typography>\n        <sj-typography variant=\"pre\">preformatted</sj-typography>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "BasicRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    playgroundSj: {\n      padding: '2px',\n    },\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [sj]=\"[ sj.p(3) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "ColumnCentered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useCol: true, useCenter: true, useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "ComponentPolymorphism",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { component: 'section', useGap: 2 },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [component]=\"component\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Section tag</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">With gap 2</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "DensityGap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGap: 'comfortable' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('info.light'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "DensityPadding",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { usePadding: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [usePadding]=\"usePadding\">\n        <div [sj]=\"[ sj.bg('primary.light') ]\">A</div>\n        <div [sj]=\"[ sj.bg('secondary.light') ]\">B</div>\n        <div [sj]=\"[ sj.bg('info.light') ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Filled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'filled', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Click me</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'flat', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Flat</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'flat', usePadding: 'default', useRounded: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `<sj-paper [variant]=\"variant\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\">Flat paper</sj-paper>`,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Button',\n  component: SjButtonComponent as any,\n  tags: ['autodocs'],\n  decorators: [moduleMetadata({ imports: [SjDirective] })],\n  argTypes: {\n    variant: { control: 'select', options: ['filled', 'outlined', 'flat'] },\n    useDensity: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n    useFullWidth: { control: 'boolean' },\n    useRounded: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', 'none'] },\n    usePaint: { control: 'select', options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light', 'auto', 'none'] },\n    sj: {\n      control: 'object',\n      table: { type: { summary: 'SjStyle | SjStyle[]' } },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SjCardComponent>",
                "defaultValue": "{\n  title: 'SJ/Card',\n  component: SjCardComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['flat', 'outlined', 'elevated', 'interactive'] },\n    paint: { control: 'select', options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light'] },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n    usePadding: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useRounded: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useGutters: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useGap: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useCol: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    fullClickable: { control: 'boolean' },\n    sj: { control: 'object' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Flex',\n  component: SjFlexComponent as any,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'A powerful and flexible layout component. Use the `use*` inputs for common flexbox patterns and density adjustments. For fine-grained control, including responsive layouts and properties like `justifyContent` or `alignItems`, use the `[sj]` input.',\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      // Needed for [sj] on native elements inside story templates\n      imports: [SjDirective],\n    }),\n  ],\n  argTypes: {\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article', 'span'],\n    },\n    host: { control: 'boolean' },\n    useCol: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n\n    useGap: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    // Playground-only: allow testing the [sj] input with object or array\n    playgroundSj: {\n      control: 'object',\n      description:\n        'Use this to pass any style object to the component. This is the primary way to apply detailed styles like `justifyContent`, `alignItems`, or responsive values. E.g., `{ justifyContent: \"flex-end\" }`.',\n      table: {\n        category: 'Playground',\n        type: { summary: 'SjStyle | SjStyle[]' },\n      },\n    },\n    // Playground: color sugars from base component\n    useBg: {\n      control: 'text',\n      description:\n        'Background color token or CSS color (e.g., primary, primary.light, #111, white).',\n      table: { category: 'Playground' },\n    },\n    useColor: {\n      control: 'text',\n      description:\n        'Text color token or CSS color. Use \"auto\" to derive <family>.contrast when useBg is a palette token.',\n      table: { category: 'Playground' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Paper',\n  component: SjPaperComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'flat', 'outlined', 'filled'],\n    },\n    component: { control: 'select', options: ['div', 'section', 'article'] },\n    usePaint: {\n      control: 'select',\n      options: [\n        'none',\n        'auto',\n        'primary',\n        'secondary',\n        'success',\n        'info',\n        'warning',\n        'error',\n        'dark',\n        'neutral',\n        'light',\n      ],\n      table: {\n        category: 'Surface',\n        type: { summary: `'none' | 'auto' | palette family` },\n      },\n      description:\n        'Full paint override. For subtle tints prefer [useBg] or future useTint.',\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        'none',\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n        1,\n        2,\n        3,\n        4,\n      ],\n    },\n    useRounded: {\n      control: 'select',\n      options: [\n        'none',\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n        1,\n        2,\n        3,\n        4,\n      ],\n    },\n    playgroundSj: {\n      control: 'object',\n      description:\n        'Use this to pass any style object to the component for live testing. This input always has the final say in styling.',\n      table: {\n        category: 'Playground',\n        type: { summary: 'SjStyle | SjStyle[]' },\n      },\n    },\n    // Colors are set via [sj] (e.g., sj.bg('primary.light'), sj.c('primary.contrast'))\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SjTypographyComponent>",
                "defaultValue": "{\n  title: 'SJ/Typography',\n  component: SjTypographyComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['h1','h2','h3','h4','h5','h6','p','span','strong','small','pre','body'] },\n    sj: { control: 'object' },\n  },\n}"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'outlined', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Outlined</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'outlined',\n    usePaint: 'none',\n    usePadding: 'comfortable',\n    useRounded: 'comfortable',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `<sj-paper [variant]=\"variant\" [usePaint]=\"usePaint\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\">Outlined paper</sj-paper>`,\n  }),\n}"
            },
            {
                "name": "Playground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'filled',\n    useDensity: 2,\n    useFullWidth: false,\n    useRounded: 2,\n    usePaint: 'auto',\n    sj: undefined,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 20rem\">\n        <sj-button\n          [variant]=\"variant\"\n          [useDensity]=\"useDensity\"\n          [useFullWidth]=\"useFullWidth\"\n          [useRounded]=\"useRounded\"\n          [usePaint]=\"usePaint\"\n          [sj]=\"sj\"\n        >\n          Button Playground\n        </sj-button>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Playground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'flat',\n    density: 2,\n  },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [paint]=\"paint\" [density]=\"density\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\" [useGutters]=\"useGutters\" [useGap]=\"useGap\" [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useBetween]=\"useBetween\" [useAround]=\"useAround\" [useEvenly]=\"useEvenly\" [useWrap]=\"useWrap\" [useInline]=\"useInline\" [fullClickable]=\"fullClickable\" [sj]=\"sj\">Card Content</sj-card>`,\n  }),\n}"
            },
            {
                "name": "Playground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    component: 'section',\n    host: false,\n    useCol: false,\n    useWrap: false,\n    useInline: false,\n    useCenter: false,\n    useBetween: false,\n    useAround: false,\n    useEvenly: false,\n    useGap: 'none',\n    usePadding: 'none',\n    playgroundSj: {} as SjInput | undefined,\n    useBg: 'light.light',\n    useColor: 'auto',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex\n        [component]=\"component\"\n        [host]=\"host\"\n        [useCol]=\"useCol\"\n        [useWrap]=\"useWrap\"\n        [useInline]=\"useInline\"\n        [useCenter]=\"useCenter\"\n        [useBetween]=\"useBetween\"\n        [useAround]=\"useAround\"\n        [useEvenly]=\"useEvenly\"\n        [useGap]=\"useGap\"\n        [usePadding]=\"usePadding\"\n        [useBg]=\"useBg\"\n        [useColor]=\"useColor\"\n        [sj]=\"playgroundSj\"\n      >\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.padding(0.5),  sj.color('secondary.contrast'), sj.backgroundColor('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"{padding:0.5, color:'info.contrast', backgroundColor:'info', borderRadius:0.5}\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Playground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    variant: 'outlined',\n    component: 'div',\n    usePaint: 'none',\n    usePadding: 'default',\n    useRounded: 'default',\n    playgroundSj: {} as SjInput | undefined,\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-paper\n        [variant]=\"variant\"\n        [component]=\"component\"\n        [usePaint]=\"usePaint\"\n        [usePadding]=\"usePadding\"\n        [useRounded]=\"useRounded\"\n        [sj]=\"playgroundSj ?? [ sj.bg('light.light'), sj.c('dark.contrast') ]\"\n      >\n        Paper Playground\n      </sj-paper>\n    `,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "ResponsiveOverride",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\" [sj]=\"[ sj.gap({ xs: .25, md: .75 }) ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5) ]\">xs/md gap override</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5) ]\">(sj.gap wins)</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Single",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'h4', sj: { color: 'dark' } },\n  render: (args) => ({\n    props: args,\n    template: `<sj-typography [variant]=\"variant\" [sj]=\"sj\">Typography {{ variant }}</sj-typography>`,\n  }),\n}"
            },
            {
                "name": "WrapAndInline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useWrap: true, useInline: true, useGap: 'default' },\n  render: (args) => ({\n    props: {\n      ...args,\n      sj,\n      numbers: Array.from({ length: 40 }, (_, i) => i + 1),\n    },\n    template: `\n      <sj-flex [useWrap]=\"useWrap\" [useInline]=\"useInline\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div *ngFor=\"let n of numbers\" [sj]=\"[ sj.p(0.3), sj.bg('neutral.light'), sj.mr(0.3), sj.mb(0.3) ]\">{{ n }}</div>\n      </sj-flex>\n    `,\n  }),\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SjCardComponent>",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SjTypographyComponent>",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/super-jss/src/stories/sj-flex.stories.ts": [
                {
                    "name": "Alignment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [sj]=\"[{ justifyContent: 'space-between', alignItems: 'center' }, sj.minH(6), sj.bg('light.dark'), sj.p(0.5) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Left</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Right</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "BasicRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    playgroundSj: {\n      padding: '2px',\n    },\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [sj]=\"[ sj.p(3) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ColumnCentered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useCol: true, useCenter: true, useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ComponentPolymorphism",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { component: 'section', useGap: 2 },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [component]=\"component\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Section tag</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">With gap 2</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "DensityGap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGap: 'comfortable' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('info.light'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "DensityPadding",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { usePadding: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [usePadding]=\"usePadding\">\n        <div [sj]=\"[ sj.bg('primary.light') ]\">A</div>\n        <div [sj]=\"[ sj.bg('secondary.light') ]\">B</div>\n        <div [sj]=\"[ sj.bg('info.light') ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Flex',\n  component: SjFlexComponent as any,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'A powerful and flexible layout component. Use the `use*` inputs for common flexbox patterns and density adjustments. For fine-grained control, including responsive layouts and properties like `justifyContent` or `alignItems`, use the `[sj]` input.',\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      // Needed for [sj] on native elements inside story templates\n      imports: [SjDirective],\n    }),\n  ],\n  argTypes: {\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article', 'span'],\n    },\n    host: { control: 'boolean' },\n    useCol: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n\n    useGap: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    // Playground-only: allow testing the [sj] input with object or array\n    playgroundSj: {\n      control: 'object',\n      description:\n        'Use this to pass any style object to the component. This is the primary way to apply detailed styles like `justifyContent`, `alignItems`, or responsive values. E.g., `{ justifyContent: \"flex-end\" }`.',\n      table: {\n        category: 'Playground',\n        type: { summary: 'SjStyle | SjStyle[]' },\n      },\n    },\n    // Playground: color sugars from base component\n    useBg: {\n      control: 'text',\n      description:\n        'Background color token or CSS color (e.g., primary, primary.light, #111, white).',\n      table: { category: 'Playground' },\n    },\n    useColor: {\n      control: 'text',\n      description:\n        'Text color token or CSS color. Use \"auto\" to derive <family>.contrast when useBg is a palette token.',\n      table: { category: 'Playground' },\n    },\n  },\n}"
                },
                {
                    "name": "Playground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    component: 'section',\n    host: false,\n    useCol: false,\n    useWrap: false,\n    useInline: false,\n    useCenter: false,\n    useBetween: false,\n    useAround: false,\n    useEvenly: false,\n    useGap: 'none',\n    usePadding: 'none',\n    playgroundSj: {} as SjInput | undefined,\n    useBg: 'light.light',\n    useColor: 'auto',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex\n        [component]=\"component\"\n        [host]=\"host\"\n        [useCol]=\"useCol\"\n        [useWrap]=\"useWrap\"\n        [useInline]=\"useInline\"\n        [useCenter]=\"useCenter\"\n        [useBetween]=\"useBetween\"\n        [useAround]=\"useAround\"\n        [useEvenly]=\"useEvenly\"\n        [useGap]=\"useGap\"\n        [usePadding]=\"usePadding\"\n        [useBg]=\"useBg\"\n        [useColor]=\"useColor\"\n        [sj]=\"playgroundSj\"\n      >\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.padding(0.5),  sj.color('secondary.contrast'), sj.backgroundColor('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"{padding:0.5, color:'info.contrast', backgroundColor:'info', borderRadius:0.5}\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ResponsiveOverride",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\" [sj]=\"[ sj.gap({ xs: .25, md: .75 }) ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5) ]\">xs/md gap override</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5) ]\">(sj.gap wins)</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "WrapAndInline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useWrap: true, useInline: true, useGap: 'default' },\n  render: (args) => ({\n    props: {\n      ...args,\n      sj,\n      numbers: Array.from({ length: 40 }, (_, i) => i + 1),\n    },\n    template: `\n      <sj-flex [useWrap]=\"useWrap\" [useInline]=\"useInline\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div *ngFor=\"let n of numbers\" [sj]=\"[ sj.p(0.3), sj.bg('neutral.light'), sj.mr(0.3), sj.mb(0.3) ]\">{{ n }}</div>\n      </sj-flex>\n    `,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-typography.stories.ts": [
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display:flex; flex-direction:column; gap:8px\">\n        <sj-typography variant=\"h1\">Heading 1</sj-typography>\n        <sj-typography variant=\"h2\">Heading 2</sj-typography>\n        <sj-typography variant=\"h3\">Heading 3</sj-typography>\n        <sj-typography variant=\"h4\">Heading 4</sj-typography>\n        <sj-typography variant=\"h5\">Heading 5</sj-typography>\n        <sj-typography variant=\"h6\">Heading 6</sj-typography>\n        <sj-typography variant=\"p\">Paragraph text</sj-typography>\n        <sj-typography variant=\"span\">Span text</sj-typography>\n        <sj-typography variant=\"strong\">Strong text</sj-typography>\n        <sj-typography variant=\"small\">Small text</sj-typography>\n        <sj-typography variant=\"pre\">preformatted</sj-typography>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SjTypographyComponent>",
                    "defaultValue": "{\n  title: 'SJ/Typography',\n  component: SjTypographyComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['h1','h2','h3','h4','h5','h6','p','span','strong','small','pre','body'] },\n    sj: { control: 'object' },\n  },\n}"
                },
                {
                    "name": "Single",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'h4', sj: { color: 'dark' } },\n  render: (args) => ({\n    props: args,\n    template: `<sj-typography [variant]=\"variant\" [sj]=\"sj\">Typography {{ variant }}</sj-typography>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-button.stories.ts": [
                {
                    "name": "Filled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'filled', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Click me</sj-button>`,\n  }),\n}"
                },
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'flat', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Flat</sj-button>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Button',\n  component: SjButtonComponent as any,\n  tags: ['autodocs'],\n  decorators: [moduleMetadata({ imports: [SjDirective] })],\n  argTypes: {\n    variant: { control: 'select', options: ['filled', 'outlined', 'flat'] },\n    useDensity: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n    useFullWidth: { control: 'boolean' },\n    useRounded: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', 'none'] },\n    usePaint: { control: 'select', options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light', 'auto', 'none'] },\n    sj: {\n      control: 'object',\n      table: { type: { summary: 'SjStyle | SjStyle[]' } },\n    },\n  },\n}"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'outlined', useDensity: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [useDensity]=\"useDensity\">Outlined</sj-button>`,\n  }),\n}"
                },
                {
                    "name": "Playground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'filled',\n    useDensity: 2,\n    useFullWidth: false,\n    useRounded: 2,\n    usePaint: 'auto',\n    sj: undefined,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <div style=\"width: 20rem\">\n        <sj-button\n          [variant]=\"variant\"\n          [useDensity]=\"useDensity\"\n          [useFullWidth]=\"useFullWidth\"\n          [useRounded]=\"useRounded\"\n          [usePaint]=\"usePaint\"\n          [sj]=\"sj\"\n        >\n          Button Playground\n        </sj-button>\n      </div>\n    `,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-paper.stories.ts": [
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'flat', usePadding: 'default', useRounded: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `<sj-paper [variant]=\"variant\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\">Flat paper</sj-paper>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Paper',\n  component: SjPaperComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'flat', 'outlined', 'filled'],\n    },\n    component: { control: 'select', options: ['div', 'section', 'article'] },\n    usePaint: {\n      control: 'select',\n      options: [\n        'none',\n        'auto',\n        'primary',\n        'secondary',\n        'success',\n        'info',\n        'warning',\n        'error',\n        'dark',\n        'neutral',\n        'light',\n      ],\n      table: {\n        category: 'Surface',\n        type: { summary: `'none' | 'auto' | palette family` },\n      },\n      description:\n        'Full paint override. For subtle tints prefer [useBg] or future useTint.',\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        'none',\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n        1,\n        2,\n        3,\n        4,\n      ],\n    },\n    useRounded: {\n      control: 'select',\n      options: [\n        'none',\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n        1,\n        2,\n        3,\n        4,\n      ],\n    },\n    playgroundSj: {\n      control: 'object',\n      description:\n        'Use this to pass any style object to the component for live testing. This input always has the final say in styling.',\n      table: {\n        category: 'Playground',\n        type: { summary: 'SjStyle | SjStyle[]' },\n      },\n    },\n    // Colors are set via [sj] (e.g., sj.bg('primary.light'), sj.c('primary.contrast'))\n  },\n}"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'outlined',\n    usePaint: 'none',\n    usePadding: 'comfortable',\n    useRounded: 'comfortable',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `<sj-paper [variant]=\"variant\" [usePaint]=\"usePaint\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\">Outlined paper</sj-paper>`,\n  }),\n}"
                },
                {
                    "name": "Playground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'outlined',\n    component: 'div',\n    usePaint: 'none',\n    usePadding: 'default',\n    useRounded: 'default',\n    playgroundSj: {} as SjInput | undefined,\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-paper\n        [variant]=\"variant\"\n        [component]=\"component\"\n        [usePaint]=\"usePaint\"\n        [usePadding]=\"usePadding\"\n        [useRounded]=\"useRounded\"\n        [sj]=\"playgroundSj ?? [ sj.bg('light.light'), sj.c('dark.contrast') ]\"\n      >\n        Paper Playground\n      </sj-paper>\n    `,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-card.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SjCardComponent>",
                    "defaultValue": "{\n  title: 'SJ/Card',\n  component: SjCardComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['flat', 'outlined', 'elevated', 'interactive'] },\n    paint: { control: 'select', options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light'] },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n    usePadding: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useRounded: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useGutters: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useGap: { control: 'select', options: [1, 2, 3, 4, 'compact', 'default', 'comfortable', 'spacious', true, ''] },\n    useCol: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    fullClickable: { control: 'boolean' },\n    sj: { control: 'object' },\n  },\n}"
                },
                {
                    "name": "Playground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    variant: 'flat',\n    density: 2,\n  },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [paint]=\"paint\" [density]=\"density\" [usePadding]=\"usePadding\" [useRounded]=\"useRounded\" [useGutters]=\"useGutters\" [useGap]=\"useGap\" [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useBetween]=\"useBetween\" [useAround]=\"useAround\" [useEvenly]=\"useEvenly\" [useWrap]=\"useWrap\" [useInline]=\"useInline\" [fullClickable]=\"fullClickable\" [sj]=\"sj\">Card Content</sj-card>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/super-jss/src/stories/sj-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SjCardComponent>",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-flex.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-paper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SjTypographyComponent>",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/super-jss/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Playground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Playground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Alignment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColumnCentered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ComponentPolymorphism",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DensityGap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DensityPadding",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Playground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ResponsiveOverride",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WrapAndInline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Playground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Single",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}