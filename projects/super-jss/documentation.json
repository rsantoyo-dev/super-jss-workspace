{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AlignmentTokens",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useJustify: 'space-between', useAlign: 'center' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useJustify]=\"useJustify\" [useAlign]=\"useAlign\" [sj]=\"[ sj.minH(6), sj.bg('light.dark'), sj.p(0.5) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Left</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Right</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "AllVariants",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display:flex; flex-direction:column; gap:8px\">\n        <sj-typography variant=\"h1\">Heading 1</sj-typography>\n        <sj-typography variant=\"h2\">Heading 2</sj-typography>\n        <sj-typography variant=\"h3\">Heading 3</sj-typography>\n        <sj-typography variant=\"h4\">Heading 4</sj-typography>\n        <sj-typography variant=\"h5\">Heading 5</sj-typography>\n        <sj-typography variant=\"h6\">Heading 6</sj-typography>\n        <sj-typography variant=\"p\">Paragraph text</sj-typography>\n        <sj-typography variant=\"span\">Span text</sj-typography>\n        <sj-typography variant=\"strong\">Strong text</sj-typography>\n        <sj-typography variant=\"small\">Small text</sj-typography>\n        <sj-typography variant=\"pre\">preformatted</sj-typography>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "BasicRow",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  parameters: { controls: { disable: true } },\n  render: () => ({\n    props: { sj },\n    template: `\n      <sj-flex>\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.c('secondary.contrast'), sj.bg('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.c('info.contrast'), sj.bg('info'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Column",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { direction: 'column', gap: 0.5 },\n  render: (args) => ({\n    props: args,\n    template: `\n      <sj-stack [direction]=\"direction\" [gap]=\"gap\">\n        <div [sj]=\"{ p: 0.5, bg: 'primary.light', brad: 0.5 }\">1</div>\n        <div [sj]=\"{ p: 0.5, bg: 'secondary.light', brad: 0.5 }\">2</div>\n        <div [sj]=\"{ p: 0.5, bg: 'info.light', brad: 0.5 }\">3</div>\n      </sj-stack>\n    `,\n  }),\n}"
            },
            {
                "name": "ColumnCentered",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useCol: true, useCenter: true, useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "ComponentPolymorphism",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { component: 'section', useGap: 2 },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [component]=\"component\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Section tag</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">With gap 2</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'default', component: 'div', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\">\n      Card content\n    </sj-card>`,\n  }),\n}"
            },
            {
                "name": "DensityGap",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGap: 'comfortable' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('info.light'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "DensityPadding",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { usePadding: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [usePadding]=\"usePadding\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Elevated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'elevated', component: 'article', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">\n      Elevated card content\n    </sj-card>`,\n  }),\n}"
            },
            {
                "name": "Filled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'filled', color: 'primary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Click me</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Filled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'filled', component: 'article', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Filled paper</sj-paper>`,\n  }),\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'flat', color: 'primary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Flat</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Flat",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'flat', component: 'div', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Flat paper</sj-paper>`,\n  }),\n}"
            },
            {
                "name": "GuttersCombined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGutters: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGutters]=\"useGutters\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "GuttersWithOverrides",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGutters: 'default', useGap: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGutters]=\"useGutters\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "HostModeGutters",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { host: true, useGutters: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <div [sj]=\"[ sj.bg('light.dark'), sj.brad(0.5) ]\">\n        <!-- host applies to this div -->\n        <sj-flex [host]=\"host\" [useGutters]=\"useGutters\">\n          <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n          <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n        </sj-flex>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SjButtonComponent>",
                "defaultValue": "{\n  title: 'SJ/Button',\n  component: SjButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['filled', 'outlined', 'flat', 'contained', 'light', 'danger', 'containedPrimary'],\n    },\n    color: {\n      control: 'select',\n      options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light'],\n    },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Card',\n  component: SjCardComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'outlined', 'flat', 'elevated', 'interactive', 'primary', 'secondary', 'info'],\n    },\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article'],\n    },\n    usePadding: { control: 'boolean' },\n    useGap: { control: 'boolean' },\n    useRounded: { control: 'boolean' },\n    useSurface: { control: 'boolean' },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Flex',\n  component: SjFlexComponent as any,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'sj-flex is a layout primitive. Use use* sugars for common flex patterns and density sugars (useGap/usePadding/useGutters) to apply theme spacing. [sj] always merges last.',\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      // Needed for [sj] on native elements inside story templates\n      imports: [SjDirective],\n    }),\n  ],\n  argTypes: {\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article', 'span'],\n    },\n    host: { control: 'boolean' },\n    useCol: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n    useJustify: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        'center',\n        'space-between',\n        'space-around',\n        'space-evenly',\n        'flex-start',\n        'flex-end',\n        'start',\n        'end',\n        'stretch',\n        'baseline',\n      ],\n    },\n    useAlign: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        'center',\n        'flex-start',\n        'flex-end',\n        'start',\n        'end',\n        'stretch',\n        'baseline',\n      ],\n    },\n    useGap: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    useGutters: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Paper',\n  component: SjPaperComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['default', 'flat', 'outlined', 'filled'] },\n    component: { control: 'select', options: ['div', 'section', 'article'] },\n    usePadding: { control: 'boolean' },\n    useGap: { control: 'boolean' },\n    useRounded: { control: 'boolean' },\n    useSurface: { control: 'boolean' },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta",
                "defaultValue": "{\n  title: 'SJ/Stack',\n  component: SjStackComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    direction: { control: 'select', options: ['row', 'column'] },\n    gap: { control: 'number' },\n    justify: { control: 'select', options: ['flex-start','flex-end','center','space-between','space-around','space-evenly'] },\n    align: { control: 'select', options: ['flex-start','flex-end','center','stretch','baseline'] },\n    wrap: { control: 'select', options: ['nowrap','wrap','wrap-reverse'] },\n    inline: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SjTypographyComponent>",
                "defaultValue": "{\n  title: 'SJ/Typography',\n  component: SjTypographyComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['h1','h2','h3','h4','h5','h6','p','span','strong','small','pre','body'] },\n  },\n}"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'outlined', color: 'secondary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Outlined</sj-button>`,\n  }),\n}"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'outlined', component: 'section', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">\n      Outlined card content\n    </sj-card>`,\n  }),\n}"
            },
            {
                "name": "Outlined",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'outlined', component: 'section', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Outlined paper</sj-paper>`,\n  }),\n}"
            },
            {
                "name": "Playground",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    component: 'section',\n    host: false,\n    useCol: false,\n    useWrap: false,\n    useInline: false,\n    useCenter: false,\n    useBetween: false,\n    useAround: false,\n    useEvenly: false,\n    useJustify: undefined,\n    useAlign: undefined,\n    useGap: 'none',\n    usePadding: 'none',\n    useGutters: 'none',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex\n        [component]=\"component\"\n        [host]=\"host\"\n        [useCol]=\"useCol\"\n        [useWrap]=\"useWrap\"\n        [useInline]=\"useInline\"\n        [useCenter]=\"useCenter\"\n        [useBetween]=\"useBetween\"\n        [useAround]=\"useAround\"\n        [useEvenly]=\"useEvenly\"\n        [useJustify]=\"useJustify || undefined\"\n        [useAlign]=\"useAlign || undefined\"\n        [useGap]=\"useGap\"\n        [usePadding]=\"usePadding\"\n        [useGutters]=\"useGutters\"\n        [sj]=\"sj.bg('light.light')\"\n      >\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.padding(0.5),  sj.color('secondary.contrast'), sj.backgroundColor('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"{padding:0.5, color:'info.contrast', backgroundColor:'info', borderRadius:0.5}\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
            },
            {
                "name": "ResponsiveOverride",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\" [sj]=\"[ sj.gap({ xs: .25, md: .75 }) ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5) ]\">xs/md gap override</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5) ]\">(sj.gap wins)</div>\n      </sj-flex>\n    `,\n  }),\n}"
            },
            {
                "name": "Row",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { direction: 'row', gap: 1, align: 'center' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <sj-stack [direction]=\"direction\" [gap]=\"gap\" [align]=\"align\">\n        <div [sj]=\"{ p: 0.5, bg: 'primary.light', brad: 0.5 }\">A</div>\n        <div [sj]=\"{ p: 0.5, bg: 'secondary.light', brad: 0.5 }\">B</div>\n        <div [sj]=\"{ p: 0.5, bg: 'info.light', brad: 0.5 }\">C</div>\n      </sj-stack>\n    `,\n  }),\n}"
            },
            {
                "name": "Single",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { variant: 'h4' },\n  render: (args) => ({\n    props: args,\n    template: `<sj-typography [variant]=\"variant\">Typography {{ variant }}</sj-typography>`,\n  }),\n}"
            },
            {
                "name": "WrapAndInline",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { useWrap: true, useInline: true },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useWrap]=\"useWrap\" [useInline]=\"useInline\" [sj]=\"[ sj.bg('light.light'), sj.p(0.5) ]\">\n        <div *ngFor=\"let i of [1,2,3,4,5,6,7]\" [sj]=\"[ sj.p(0.3), sj.bg('neutral.light'), sj.mr(0.3), sj.mb(0.3) ]\">{{ i }}</div>\n      </sj-flex>\n    `,\n  }),\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SjButtonComponent>",
                "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj",
                "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SjTypographyComponent>",
                "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/super-jss/src/stories/sj-flex.stories.ts": [
                {
                    "name": "AlignmentTokens",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useJustify: 'space-between', useAlign: 'center' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useJustify]=\"useJustify\" [useAlign]=\"useAlign\" [sj]=\"[ sj.minH(6), sj.bg('light.dark'), sj.p(0.5) ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Left</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Right</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "BasicRow",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  parameters: { controls: { disable: true } },\n  render: () => ({\n    props: { sj },\n    template: `\n      <sj-flex>\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.c('secondary.contrast'), sj.bg('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.c('info.contrast'), sj.bg('info'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ColumnCentered",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useCol: true, useCenter: true, useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useCol]=\"useCol\" [useCenter]=\"useCenter\" [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ComponentPolymorphism",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { component: 'section', useGap: 2 },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [component]=\"component\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">Section tag</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">With gap 2</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "DensityGap",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGap: 'comfortable' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\">\n        <div [sj]=\"[ sj.p(0.5), sj.bg('primary.light'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('secondary.light'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"[ sj.p(0.5), sj.bg('info.light'), sj.brad(0.5) ]\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "DensityPadding",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { usePadding: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [usePadding]=\"usePadding\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "GuttersCombined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGutters: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGutters]=\"useGutters\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "GuttersWithOverrides",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGutters: 'default', useGap: 'compact' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGutters]=\"useGutters\" [useGap]=\"useGap\" [sj]=\"[ sj.bg('light.light') ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "HostModeGutters",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { host: true, useGutters: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <div [sj]=\"[ sj.bg('light.dark'), sj.brad(0.5) ]\">\n        <!-- host applies to this div -->\n        <sj-flex [host]=\"host\" [useGutters]=\"useGutters\">\n          <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5), sj.mr(0.3) ]\">One</div>\n          <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5), sj.mr(0.3) ]\">Two</div>\n        </sj-flex>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Flex',\n  component: SjFlexComponent as any,\n  tags: ['autodocs'],\n  parameters: {\n    docs: {\n      description: {\n        component:\n          'sj-flex is a layout primitive. Use use* sugars for common flex patterns and density sugars (useGap/usePadding/useGutters) to apply theme spacing. [sj] always merges last.',\n      },\n    },\n  },\n  decorators: [\n    moduleMetadata({\n      // Needed for [sj] on native elements inside story templates\n      imports: [SjDirective],\n    }),\n  ],\n  argTypes: {\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article', 'span'],\n    },\n    host: { control: 'boolean' },\n    useCol: { control: 'boolean' },\n    useWrap: { control: 'boolean' },\n    useInline: { control: 'boolean' },\n    useCenter: { control: 'boolean' },\n    useBetween: { control: 'boolean' },\n    useAround: { control: 'boolean' },\n    useEvenly: { control: 'boolean' },\n    useJustify: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        'center',\n        'space-between',\n        'space-around',\n        'space-evenly',\n        'flex-start',\n        'flex-end',\n        'start',\n        'end',\n        'stretch',\n        'baseline',\n      ],\n    },\n    useAlign: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        'center',\n        'flex-start',\n        'flex-end',\n        'start',\n        'end',\n        'stretch',\n        'baseline',\n      ],\n    },\n    useGap: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    usePadding: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n    useGutters: {\n      control: 'select',\n      options: [\n        undefined,\n        'none',\n        1,\n        2,\n        3,\n        4,\n        'compact',\n        'default',\n        'comfortable',\n        'spacious',\n      ],\n    },\n  },\n}"
                },
                {
                    "name": "Playground",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    component: 'section',\n    host: false,\n    useCol: false,\n    useWrap: false,\n    useInline: false,\n    useCenter: false,\n    useBetween: false,\n    useAround: false,\n    useEvenly: false,\n    useJustify: undefined,\n    useAlign: undefined,\n    useGap: 'none',\n    usePadding: 'none',\n    useGutters: 'none',\n  },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex\n        [component]=\"component\"\n        [host]=\"host\"\n        [useCol]=\"useCol\"\n        [useWrap]=\"useWrap\"\n        [useInline]=\"useInline\"\n        [useCenter]=\"useCenter\"\n        [useBetween]=\"useBetween\"\n        [useAround]=\"useAround\"\n        [useEvenly]=\"useEvenly\"\n        [useJustify]=\"useJustify || undefined\"\n        [useAlign]=\"useAlign || undefined\"\n        [useGap]=\"useGap\"\n        [usePadding]=\"usePadding\"\n        [useGutters]=\"useGutters\"\n        [sj]=\"sj.bg('light.light')\"\n      >\n        <div [sj]=\"[ sj.p(0.5), sj.c('primary.contrast'), sj.bg('primary'), sj.brad(0.5) ]\">A</div>\n        <div [sj]=\"[ sj.padding(0.5),  sj.color('secondary.contrast'), sj.backgroundColor('secondary'), sj.brad(0.5) ]\">B</div>\n        <div [sj]=\"{padding:0.5, color:'info.contrast', backgroundColor:'info', borderRadius:0.5}\">C</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "ResponsiveOverride",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useGap: 'default' },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useGap]=\"useGap\" [sj]=\"[ sj.gap({ xs: .25, md: .75 }) ]\">\n        <div [sj]=\"[ sj.p(0.3), sj.bg('primary.light'), sj.brad(0.5) ]\">xs/md gap override</div>\n        <div [sj]=\"[ sj.p(0.3), sj.bg('secondary.light'), sj.brad(0.5) ]\">(sj.gap wins)</div>\n      </sj-flex>\n    `,\n  }),\n}"
                },
                {
                    "name": "WrapAndInline",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { useWrap: true, useInline: true },\n  render: (args) => ({\n    props: { ...args, sj },\n    template: `\n      <sj-flex [useWrap]=\"useWrap\" [useInline]=\"useInline\" [sj]=\"[ sj.bg('light.light'), sj.p(0.5) ]\">\n        <div *ngFor=\"let i of [1,2,3,4,5,6,7]\" [sj]=\"[ sj.p(0.3), sj.bg('neutral.light'), sj.mr(0.3), sj.mb(0.3) ]\">{{ i }}</div>\n      </sj-flex>\n    `,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-typography.stories.ts": [
                {
                    "name": "AllVariants",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div style=\"display:flex; flex-direction:column; gap:8px\">\n        <sj-typography variant=\"h1\">Heading 1</sj-typography>\n        <sj-typography variant=\"h2\">Heading 2</sj-typography>\n        <sj-typography variant=\"h3\">Heading 3</sj-typography>\n        <sj-typography variant=\"h4\">Heading 4</sj-typography>\n        <sj-typography variant=\"h5\">Heading 5</sj-typography>\n        <sj-typography variant=\"h6\">Heading 6</sj-typography>\n        <sj-typography variant=\"p\">Paragraph text</sj-typography>\n        <sj-typography variant=\"span\">Span text</sj-typography>\n        <sj-typography variant=\"strong\">Strong text</sj-typography>\n        <sj-typography variant=\"small\">Small text</sj-typography>\n        <sj-typography variant=\"pre\">preformatted</sj-typography>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SjTypographyComponent>",
                    "defaultValue": "{\n  title: 'SJ/Typography',\n  component: SjTypographyComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['h1','h2','h3','h4','h5','h6','p','span','strong','small','pre','body'] },\n  },\n}"
                },
                {
                    "name": "Single",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'h4' },\n  render: (args) => ({\n    props: args,\n    template: `<sj-typography [variant]=\"variant\">Typography {{ variant }}</sj-typography>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-stack.stories.ts": [
                {
                    "name": "Column",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { direction: 'column', gap: 0.5 },\n  render: (args) => ({\n    props: args,\n    template: `\n      <sj-stack [direction]=\"direction\" [gap]=\"gap\">\n        <div [sj]=\"{ p: 0.5, bg: 'primary.light', brad: 0.5 }\">1</div>\n        <div [sj]=\"{ p: 0.5, bg: 'secondary.light', brad: 0.5 }\">2</div>\n        <div [sj]=\"{ p: 0.5, bg: 'info.light', brad: 0.5 }\">3</div>\n      </sj-stack>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Stack',\n  component: SjStackComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    direction: { control: 'select', options: ['row', 'column'] },\n    gap: { control: 'number' },\n    justify: { control: 'select', options: ['flex-start','flex-end','center','space-between','space-around','space-evenly'] },\n    align: { control: 'select', options: ['flex-start','flex-end','center','stretch','baseline'] },\n    wrap: { control: 'select', options: ['nowrap','wrap','wrap-reverse'] },\n    inline: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Row",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { direction: 'row', gap: 1, align: 'center' },\n  render: (args) => ({\n    props: args,\n    template: `\n      <sj-stack [direction]=\"direction\" [gap]=\"gap\" [align]=\"align\">\n        <div [sj]=\"{ p: 0.5, bg: 'primary.light', brad: 0.5 }\">A</div>\n        <div [sj]=\"{ p: 0.5, bg: 'secondary.light', brad: 0.5 }\">B</div>\n        <div [sj]=\"{ p: 0.5, bg: 'info.light', brad: 0.5 }\">C</div>\n      </sj-stack>\n    `,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-card.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'default', component: 'div', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\">\n      Card content\n    </sj-card>`,\n  }),\n}"
                },
                {
                    "name": "Elevated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'elevated', component: 'article', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">\n      Elevated card content\n    </sj-card>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Card',\n  component: SjCardComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['default', 'outlined', 'flat', 'elevated', 'interactive', 'primary', 'secondary', 'info'],\n    },\n    component: {\n      control: 'select',\n      options: ['div', 'section', 'article'],\n    },\n    usePadding: { control: 'boolean' },\n    useGap: { control: 'boolean' },\n    useRounded: { control: 'boolean' },\n    useSurface: { control: 'boolean' },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'outlined', component: 'section', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-card [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">\n      Outlined card content\n    </sj-card>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-button.stories.ts": [
                {
                    "name": "Filled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'filled', color: 'primary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Click me</sj-button>`,\n  }),\n}"
                },
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'flat', color: 'primary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Flat</sj-button>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SjButtonComponent>",
                    "defaultValue": "{\n  title: 'SJ/Button',\n  component: SjButtonComponent,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: {\n      control: 'select',\n      options: ['filled', 'outlined', 'flat', 'contained', 'light', 'danger', 'containedPrimary'],\n    },\n    color: {\n      control: 'select',\n      options: ['primary', 'secondary', 'success', 'info', 'warning', 'error', 'dark', 'neutral', 'light'],\n    },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'outlined', color: 'secondary', density: 2 },\n  render: (args) => ({\n    props: args,\n    template: `<sj-button [variant]=\"variant\" [color]=\"color\" [density]=\"density\">Outlined</sj-button>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/src/stories/sj-paper.stories.ts": [
                {
                    "name": "Filled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'filled', component: 'article', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Filled paper</sj-paper>`,\n  }),\n}"
                },
                {
                    "name": "Flat",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'flat', component: 'div', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Flat paper</sj-paper>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta",
                    "defaultValue": "{\n  title: 'SJ/Paper',\n  component: SjPaperComponent as any,\n  tags: ['autodocs'],\n  argTypes: {\n    variant: { control: 'select', options: ['default', 'flat', 'outlined', 'filled'] },\n    component: { control: 'select', options: ['div', 'section', 'article'] },\n    usePadding: { control: 'boolean' },\n    useGap: { control: 'boolean' },\n    useRounded: { control: 'boolean' },\n    useSurface: { control: 'boolean' },\n    density: { control: { type: 'number', min: 1, max: 4, step: 1 } },\n  },\n}"
                },
                {
                    "name": "Outlined",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { variant: 'outlined', component: 'section', density: 2, usePadding: true },\n  render: (args) => ({\n    props: args,\n    template: `<sj-paper [variant]=\"variant\" [component]=\"component\" [density]=\"density\" [usePadding]=\"usePadding\">Outlined paper</sj-paper>`,\n  }),\n}"
                }
            ],
            "projects/super-jss/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/super-jss/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    controls: {\n      matchers: {\n       color: /(background|color)$/i,\n       date: /Date$/i,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/super-jss/src/stories/sj-button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SjButtonComponent>",
                    "file": "projects/super-jss/src/stories/sj-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-card.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-card.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-flex.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-flex.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-paper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-paper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-stack.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj",
                    "file": "projects/super-jss/src/stories/sj-stack.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/super-jss/src/stories/sj-typography.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SjTypographyComponent>",
                    "file": "projects/super-jss/src/stories/sj-typography.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/super-jss/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-button.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Elevated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-card.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AlignmentTokens",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BasicRow",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ColumnCentered",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ComponentPolymorphism",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DensityGap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DensityPadding",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GuttersCombined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GuttersWithOverrides",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HostModeGutters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Playground",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ResponsiveOverride",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WrapAndInline",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-flex.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Filled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Flat",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Outlined",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-paper.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Column",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Row",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-stack.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllVariants",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Single",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/super-jss/src/stories/sj-typography.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}